Nearing the finish of day two on the new job and I've been loving every minute of it. 

My hard work and attention to detail has paid off big time. Once I got set up on all the day-to-day tech (Slack, Asana, Humi, Harvest...) and spent some time getting familiar I basically hopped right in to coding!

My first project was to replicate a Hero component that was designed on Figma. I used Storybook to get a visual rendering of it and just completed it an hour ago.

I can already tell how much I'm going to learn in the next few weeks, particularly in CSS. I'm having to be much pickier with how I organize my grids and flex box designs and get used to using "rems" as the sizing unit for pretty much everything. I had the most difficulty figuring out how to use flex box to my advantage in centering the layouts but figured out that you can do a flex-direction: column for the main working area to help keep everything aligned. After that, the standard flex-direction: row components slide right in.

We'll see what kind of feedback I receive. I cleaned up the code quite a bit afterwards and got it to be decently responsive. Next step => push to gitHub!

First code review: done! Here are the key takeaways for me:

1) Use VH units for height and width of the uppermost parent component (because you want to fit that on whatever screen the user has) and then use percentages for children height values - this keeps everything relative to their container.

2) Letter height and letter spacing use EMS, not REMS.

3) Use the 8px grid model when possible. It's ok for REMS to have up to four decimal places - this makes sure the designs don't do partial pixel coverage.

4) Mix-blend-mode is a resource hog. It's better to just download the image with the correct colour to begin with so you don't have to mess with it later. This also ensures that other children elements aren't affected necessarily.

5) Set margin: auto for flex boxes to centre them THEN use padding to bump up the entire flex box. Using margin will mess up the entering.

6) HOWEVER, use margins on individual children to control spacing within flex boxes. Space-between is good for elements that need to be far away from each other and margins are more customizable than  space-around. 

7) NEVER trust the content - be wary of how it affects your design system.

I'll review these some more tomorrow morning. Next up is to make sure that this Hero component is mobile responsive - this will give me more experience using breakpoints and media queries - meaningful work on my birthday!


- Jeremy
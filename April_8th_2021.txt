Today I'm starting the next chapter of my JS tutorial which will be focusing on Object-Oriented Programming. The first few exercises are mostly review:

> Creating objects
> Accessing properties of objects using dot notation.
> *** CREATING OBJECT METHODS ***

This last exercise sewed up a cognitive gap for me. I knew that methods were functions that could be applied to arrays, objects and strings, but I didn't realize that they were functions that were stored as an object PROPERTY in the object itself. This way, you can create whatever function you want in an object to be used later on that object.

>"this" keyword 

This was a bit of a grey area for me, but it's purpose is much clearer now. You can call on an object's properties using "this" in place of the object's name. This creates more flexible code, should you rename the object later on.

> Constructor functions

Constructor functions differ in a few ways from standard functions. The name of the function is capitalized, and there is no return value. Each property uses the "this" keyword and is assigned a value ending in a semi-colon.
Here is an example for future reference:

function Dog() {
  this.name = "Buddy";
  this.color = "Brindle";
  this.numLegs = 4;
}


I'm hoping that today I finally finish these algorithm challenges involving strings and arrays. Started off on a good note today by completing this challenge:

** Insert an array into another array at a given point **

Solution:

function frankenSplice(arr1, arr2, n) {
  let slicedArr2 = arr2.slice();
  slicedArr2.splice(n, 0, ...arr1);
  return slicedArr2;
} 

console.log(frankenSplice([1, 2, 3], [4, 5, 6], 1)); (This returned [4, 1, 2, 3, 5, 6].

I was approaching this problem the correct way by using the spread operator, but it wasn't returning the anticipated result in my console log. It didn't like that I was trying to return the second line of this code - I'm not sure why that's the case sometimes and not others... anyways, I added a separate return line (line 3) and it worked!

Challenge number two for the day was straight forward:

** Remove all falsey values from an array **

Solution:

function bouncer(arr) {
  for (let i = 0; i < arr.length; i++) {
  return arr.filter(Boolean);
}
}

bouncer([7, "ate", "", false, 9]);

All falsey values evaluate to false, so if you filter by Boolean, it will keep all "true" results and reject all "false" results.

After lunch I completed one more challenge before I had to head to an online rehearsal:

** Find the smallest index a number can be inserted in an array and return that index **

Solution:

function getIndexToIns(arr, num) {
  arr.sort((a,b) => a - b);
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] >= num) {
      return i;
    }
  }
}

console.log(getIndexToIns([5, 3, 20, 3], 5));

This worked, but FreeCodeCamp didn't like it because I didn't include a "return arr.length" line afterwards. This makes sense looking back, because if the number didn't apply to the given array, then you should just return the length of the original array. Whatever, it wasn't very clear.




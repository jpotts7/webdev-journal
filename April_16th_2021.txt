I'm getting a little stuck with the JavaScript intermediate problems at the moment. I think the best thing for me right now to keep my motivation up and give me a fresh perspective is to step away for a bit and dive into the front-end frameworks tutorial for a bit. I could spend an eternity on JavaScript but right now I feel like I have a solid enough foundation (practically speaking) and will continue to research, learn and revisit these problems over the course of the next few weeks.

The first chapter deals with Bootstrap - I've heard a lot about this program and I'm looking forward to learning about it's practical uses!

A brief summary of what I've learned so far:

1) Include a link to bootstrap in the head. (It's a long url - you can find it online).

2) Wrap ALL of the html in a div with a class "container-fluid" - I'm not sure if this is a bootstrap specific class or if this is just how FreeCodeCamp wanted me to do it. 

3) To make images responsive, add a class called "imp-responsive" :D

4) Center text by adding the class "text-center" to whatever element you choose.

5) Use bootstrap buttons by making a button element and using the classes "btn" and "btn-default"

6) Use "btn-block" class to create a button that spans a whole block, not just the length of the text. 

7) Use "ban-primary" in place of "bin-default" to give your button the primary color of your page.

8) Bootstrap has some pre-defined colours for things. You can use a "btn-info" class to access an info button color.

9) "Btn-danger" is a red colour - good for delete buttons or buttons with other "dangerous" consequences.

*** The Bootstrap Grid ***

Bootstrap divides the display in to a 12-column grid. You can easily place items in row with each other by using this class "col-size-number". Give each element it's own div and include this class. For example, each button can have "col-xs-4" which means they take up four columns on an extra-small screen.

10) Use the "span" element to select certain words to modify with bootstrap.

11) There's a great font and icon library called "Font Awesome" that you can link to in your header. You can then add these icons to anything you want using an <I> tag or a <span> tag. Class receives the attributes "fas" and "fa-iconName".

12) You can use a class "well" in Bootstrap to give depth to elements.

Wow, that was much easier than I thought! I'm sure there much more too it, but it felt so good to do something other than JavaScript and have a better idea into how people use Bootstrap to make responsive web-pages. What a great tool!

Now it's time to dive a little deeper in to jQuery - this has been something I've looked forward to for a while and now that I have a good foundation in JavaScript I'm finally feeling good enough to dive in.

Important points I've learned today:

** Have a "document ready" function inside the script tags at the beginning of your html. This will make sure that whatever is inside the function will only run AFTER the html has been rendered. **

** You can use jQuery to select elements or attributes in your html and add new classes to them that reference the animate.css library **

$("element in quotes").addClass("classes to be added in quotes");

** You can use jQuery to target elements by type ("button", "h2"); class (".btn") and id ("#target"). **

** You can change css directly using jQuery as well! Use the .css() method but instead of writing it in typical css fashion (ex. Color: red;) you use quotes and commas ("color, "red); **

** Use the prop() method to change element properties directly. For example, you can disable a button element like this: $("button").prop("disabled", true); **

** You can remove html elements entirely by selecting their attributes (ex. $("#id").remove();

** You can move elements by appending them to other divs (ex. $("#element-to-move).appendTo("where-to-put-it"); **

** You can copy elements using clone(); **

** You can change the property of parent elements using .parent() and then chaining whatever you want to that, like css(); **

** Change a particular element using "nth-child" selector like this:
$(".classname:nth-child(#ofelement)");













